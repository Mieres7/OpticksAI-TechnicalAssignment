version: "3.8"

services:
  # Servicio de PostgreSQL
  postgres:
    image: postgres:latest
    container_name: postgres-container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: opticksai_db
    ports:
      - "5432:5432" # Exponer el puerto 5432 del contenedor
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql # Carga el archivo init.sql para crear las tablas y los datos
    networks:
      - backend-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d opticksai_db"]
      interval: 10s
      retries: 5
      timeout: 10s

  # Servicio del Backend con Express.js
  backend:
    build: ./backend # Asume que tienes un Dockerfile en la carpeta backend
    container_name: backend-container
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: opticksai_db
      DB_USER: postgres
      DB_PASSWORD: 1234
    ports:
      - "5000:5000" # Puerto para el backend
    depends_on:
      postgres:
        condition: service_healthy # Esperar a que PostgreSQL est√© saludable
    networks:
      - backend-network
    restart: always

  # Servicio del Frontend con Next.js
  frontend:
    build: ./frontend # Asume que tienes un Dockerfile en la carpeta frontend
    container_name: frontend-container
    ports:
      - "3000:3000" # Puerto para el frontend
    networks:
      - backend-network
    restart: always

networks:
  backend-network:
    driver: bridge
